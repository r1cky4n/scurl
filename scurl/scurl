#!/usr/bin/python

#=======================================================================================================================
#
# CS255 Project 2 - SCURL
#
# Author:   Rick Yan <my259@stanford.edu>
#
#=======================================================================================================================



#=======================================================================================================================
# IMPORTS
#=======================================================================================================================
import OpenSSL
from OpenSSL import SSL

import argparse


#=======================================================================================================================
# Defines
#=======================================================================================================================

# Enumeration between different protocol choices -> TLS v1.0-1.2, SSLV3
#
def enum(**enums):
    return type('Enum', (), enums)
t_protocol = enum(tls_v1p0=0, tls_v1p1=1, tls_v1p2=2, ssl_v3=3)



#=======================================================================================================================
# Internal Functions
#=======================================================================================================================


# Choose protocol, should just be prot input, otherwise default to tls 1.2
#
def _choose_protocol( args ):
    if args.prot == 0:
        return OpenSSL.SSL.TLSv1_METHOD
    elif args.prot == 1:
        return OpenSSL.SSL.TLSv1_1_METHOD
    elif args.prot == 2:
        return OpenSSL.SSL.TLSv1_2_METHOD
    elif args.prot == 3:
        return OpenSSL.SSL.SSLv3_METHOD
    else:
        return OpenSSL.SSL.TLSv1_2_METHOD


#=======================================================================================================================
# Main and Argument Parse
#=======================================================================================================================

def main():
    descr = 'Secure CURL implementation for CS 255 Project 2: Rick Yan <my259@stanford.edu>'
    parser = argparse.ArgumentParser(description=descr)

    parser.add_argument('--tlsv1.0',           nargs="?", dest="prot", const=0, help='Use TLSv1.0 (SSL)')
    parser.add_argument('--tlsv1.1',           nargs="?", dest="prot", const=1, help='Use TLSv1.1 (SSL)')
    parser.add_argument('--tlsv1.2',           nargs="?", dest="prot", const=2, help='Use TLSv1.2 (SSL)')
    parser.add_argument('--sslv3', '-3',       nargs="?", dest="prot", const=3, help='Use SSLv3 (SSL)')
    parser.add_argument('--ciphers',                      help='SSL ciphers to use (SSL)')
    parser.add_argument('--crlfile',                      help='Get a CRL list in PEM format from the given file')
    parser.add_argument('--cacert',                       help='CA certificate to verify peer against (SSL)')
    parser.add_argument('--allow-stale-certs', dest="N",  help='Allow stale certificate less than N days old to be used')
    parser.add_argument('--pinnedcertificate',            help='Only send data to authenticated server, overrides --cacert and --crlfile')
    parser.add_argument('url',                 nargs="*", help='URL target')


    args = parser.parse_args()

   # if (args.csv == None):
   #     print 'ERROR! PROPER MINIMUM FORMAT: python CommandGen.py --csv <CSV FILE>'
   #     exit(1)
   # genCmdScript(args)


    print args.ciphers
    print args.N
    print args.url

    #protocol = _choose_protocol( args )
    #print protocol

    context = OpenSSL.SSL.Context(OpenSSL.SSL.TLSv1_2_METHOD) # Use TLS Method









if __name__ == '__main__':
    main()




